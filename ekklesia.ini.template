[gnupg]
# use GPG home in current directory
home=/data/gnupg
# use default GPG home in home directory
# home= ~/.gnupg
# own sender mail address
# TODO : edit televotia sender address
sender=televotia-backend@piratenpartei.ch
# TODO : edit gpg private key passphrase
passphrase=secret


[smtp]
# send invitation mails with this SMTP account
# TODO : edit mail server url
host = mail.server.url
# TODO : edit mail televotia sender address
user = mail@server.url
# TODO : edit mail server password
password = secret

[member_api]
# (server: user, password, cert configured in SSL_BASIC_AUTH['members'])
# TODO : edit ID server API user
user = username
# TODO : edit ID server API password
password = secret
# TODO : edit ID server API client certificate
cert = /data/client-x509-certificate.crt, /data/client-x509-certificate.key

# TODO : adapt email of receiver for member list (server: API_GNUPG_KEY)
receiver = name@id-server.url
# TODO : adapt to your ID server API URL here
url = https://id-server-api.url/api/v1/backend/members/
encrypt = true
sign = true

[members]
# DB URI (SQLAlchemy syntax: postgres://<username>:<password>@<host>:<port>/<database_name>)
# TODO : adapt to your server here
#database = postgres://user:password@databaseserver:5433/database
#database = mysql+pymysql://user:password@databaseserver/database?charset=utf8
member_import = uuid,email,status,registered,verified,department
member_sync = uuid,email,status,registered,department
# TODO : adapt to your server here
#broker = amqps://user:password@idapi.url/appname?ssl_cacert=x509cacertpath&ssl_cert=x509certpath&ssl_key=x509privatekeypath
broker_exchange = register 
broker_queue = register

[invitation_api]
# (user, password, cert configured on server in SSL_BASIC_AUTH['invitations'])
# TODO : edit ID server API user
user = username
# TODO : edit ID server API password
password = secret
# TODO : edit ID server API client certificate
cert = /data/client-x509-certificate.crt, /data/client-x509-certificate.key
# TODO : adapt to your OpenGPP receiver for the ID server here
receiver = name@id-server.url
# TODO : adapt to your ID server API URL here
url = https://id-server-api.url/api/v1/backend/invitations/
encrypt = true
sign = true
format = json


[invitations]
# TODO : adapt to your server here
#database = postgres://user:password@databaseserver:5433/database
#database = mysql+pymysql://user:password@databaseserver/database?charset=utf8
invite_import = 'id','uuid','email','code','status','sent','lastchange'
invite_subject = 'Televotia ID-Server Invitation Code'
invite_body = "Dear member\n\nWelcome to Televotia. You mag register a new account with the following link:\n<%s>\n\nAttention: Do not forward this link. Anyone obtaining it may register an account in your name.\n\nKind regards\n\nPresidium of the Pirate Assembly\nPirate Party Switzerland"
# TODO : edit ID server frontend URL
invite_url = 'https://id-server.url/register/?code=%s'
invite_sign = True
invite_notify = True
registered_subject = 'Televotia ID-Server Registration successful'
registered_body = "Dear participant\n\nYour account has been successfully registered.\n\nYou can now register at Televotia Discourse:\n<https://discourse.piratenpartei.ch>\n\nKind regards\n\nPresidium of the Pirate Assembly\nPirate Party Switzerland"

